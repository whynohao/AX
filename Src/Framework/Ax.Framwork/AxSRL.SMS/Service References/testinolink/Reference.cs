//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace AxSRL.SMS.testinolink {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="testinolink.LinkWSSoap")]
    public interface LinkWSSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string HelloWorld();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        System.Threading.Tasks.Task<string> HelloWorldAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BatchSend", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int BatchSend(string CorpID, string Pwd, string Mobile, string Content, string Cell, string SendTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BatchSend", ReplyAction="*")]
        System.Threading.Tasks.Task<int> BatchSendAsync(string CorpID, string Pwd, string Mobile, string Content, string Cell, string SendTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetReportFail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetReportFail(string CorpID, string Pwd, string cell);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetReportFail", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetReportFailAsync(string CorpID, string Pwd, string cell);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Reg", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int Reg(string CorpID, string Pwd, string CorpName, string LinkMan, string Tel, string Mobile, string Email, string Memo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Reg", ReplyAction="*")]
        System.Threading.Tasks.Task<int> RegAsync(string CorpID, string Pwd, string CorpName, string LinkMan, string Tel, string Mobile, string Email, string Memo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdPwd", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int UpdPwd(string CorpID, string Pwd, string NewPwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdPwd", ReplyAction="*")]
        System.Threading.Tasks.Task<int> UpdPwdAsync(string CorpID, string Pwd, string NewPwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdReg", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int UpdReg(string CorpID, string Pwd, string CorpName, string LinkMan, string Tel, string Mobile, string Email, string Memo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdReg", ReplyAction="*")]
        System.Threading.Tasks.Task<int> UpdRegAsync(string CorpID, string Pwd, string CorpName, string LinkMan, string Tel, string Mobile, string Email, string Memo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SelSum", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SelSum(string CorpID, string Pwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SelSum", ReplyAction="*")]
        System.Threading.Tasks.Task<int> SelSumAsync(string CorpID, string Pwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Send", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int Send(string CorpID, string Pwd, string Mobile, string Content, string Cell, string SendTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Send", ReplyAction="*")]
        System.Threading.Tasks.Task<int> SendAsync(string CorpID, string Pwd, string Mobile, string Content, string Cell, string SendTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Get", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Get(string CorpID, string Pwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Get", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetAsync(string CorpID, string Pwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UnReg", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int UnReg(string CorpID, string Pwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UnReg", ReplyAction="*")]
        System.Threading.Tasks.Task<int> UnRegAsync(string CorpID, string Pwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ChargeUp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int ChargeUp(string CorpID, string Pwd, string CardNo, string CardPwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ChargeUp", ReplyAction="*")]
        System.Threading.Tasks.Task<int> ChargeUpAsync(string CorpID, string Pwd, string CardNo, string CardPwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgentChangeAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AgentChangeAccount(string LoginName, string LoginPwd, string CorpID, int SmsBalance, int MmsBalance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgentChangeAccount", ReplyAction="*")]
        System.Threading.Tasks.Task<string> AgentChangeAccountAsync(string LoginName, string LoginPwd, string CorpID, int SmsBalance, int MmsBalance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BalanceMMS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string BalanceMMS(string CorpID, string Pwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BalanceMMS", ReplyAction="*")]
        System.Threading.Tasks.Task<string> BalanceMMSAsync(string CorpID, string Pwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendMMS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SendMMS(string CorpID, string Pwd, string Mobile, string Base64Content, string Title, string ExtCode, string SendTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendMMS", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SendMMSAsync(string CorpID, string Pwd, string Mobile, string Base64Content, string Title, string ExtCode, string SendTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BatchSendMMS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string BatchSendMMS(string CorpID, string Pwd, string Mobiles, string Base64Content, string Title, string ExtCode, string SendTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BatchSendMMS", ReplyAction="*")]
        System.Threading.Tasks.Task<string> BatchSendMMSAsync(string CorpID, string Pwd, string Mobiles, string Base64Content, string Title, string ExtCode, string SendTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetReportFailMMS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetReportFailMMS(string CorpID, string Pwd, string cell);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetReportFailMMS", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetReportFailMMSAsync(string CorpID, string Pwd, string cell);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMMS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetMMS(string CorpID, string Pwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMMS", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetMMSAsync(string CorpID, string Pwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ChargeUpMMS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ChargeUpMMS(string CorpID, string Pwd, string CardNo, string CardPwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ChargeUpMMS", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ChargeUpMMSAsync(string CorpID, string Pwd, string CardNo, string CardPwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgentMakeAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AgentMakeAccount(string LoginName, string LoginPwd, string CorpName, string LinkMan, string Tel, string Mobile, string Email, string Memo, string CorpID, string Pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgentMakeAccount", ReplyAction="*")]
        System.Threading.Tasks.Task<string> AgentMakeAccountAsync(string LoginName, string LoginPwd, string CorpName, string LinkMan, string Tel, string Mobile, string Email, string Memo, string CorpID, string Pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetReportSMS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetReportSMS(string CorpID, string Pwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetReportSMS", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetReportSMSAsync(string CorpID, string Pwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetReportMMS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetReportMMS(string CorpID, string Pwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetReportMMS", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetReportMMSAsync(string CorpID, string Pwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Send2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Send2(string CorpID, string Pwd, string Mobile, string Content, string Cell, string SendTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Send2", ReplyAction="*")]
        System.Threading.Tasks.Task<string> Send2Async(string CorpID, string Pwd, string Mobile, string Content, string Cell, string SendTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendMMS2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SendMMS2(string CorpID, string Pwd, string Mobile, string Base64Content, string Title, string ExtCode, string SendTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendMMS2", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SendMMS2Async(string CorpID, string Pwd, string Mobile, string Base64Content, string Title, string ExtCode, string SendTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BatchSend2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string BatchSend2(string CorpID, string Pwd, string Mobile, string Content, string Cell, string SendTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BatchSend2", ReplyAction="*")]
        System.Threading.Tasks.Task<string> BatchSend2Async(string CorpID, string Pwd, string Mobile, string Content, string Cell, string SendTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BatchSendMMS2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string BatchSendMMS2(string CorpID, string Pwd, string Mobiles, string Base64Content, string Title, string ExtCode, string SendTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BatchSendMMS2", ReplyAction="*")]
        System.Threading.Tasks.Task<string> BatchSendMMS2Async(string CorpID, string Pwd, string Mobiles, string Base64Content, string Title, string ExtCode, string SendTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VoiceNotify", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string VoiceNotify(string CorpID, string Pwd, string Mobile, string verify_code, string vtpl_id, string show_num);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VoiceNotify", ReplyAction="*")]
        System.Threading.Tasks.Task<string> VoiceNotifyAsync(string CorpID, string Pwd, string Mobile, string verify_code, string vtpl_id, string show_num);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotSend", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string NotSend(string CorpID, string Pwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotSend", ReplyAction="*")]
        System.Threading.Tasks.Task<string> NotSendAsync(string CorpID, string Pwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BatchContentSms", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string BatchContentSms(string CorpID, string Pwd, string JsonString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BatchContentSms", ReplyAction="*")]
        System.Threading.Tasks.Task<string> BatchContentSmsAsync(string CorpID, string Pwd, string JsonString);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface LinkWSSoapChannel : AxSRL.SMS.testinolink.LinkWSSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LinkWSSoapClient : System.ServiceModel.ClientBase<AxSRL.SMS.testinolink.LinkWSSoap>, AxSRL.SMS.testinolink.LinkWSSoap {
        
        public LinkWSSoapClient() {
        }
        
        public LinkWSSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LinkWSSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LinkWSSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LinkWSSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string HelloWorld() {
            return base.Channel.HelloWorld();
        }
        
        public System.Threading.Tasks.Task<string> HelloWorldAsync() {
            return base.Channel.HelloWorldAsync();
        }
        
        public int BatchSend(string CorpID, string Pwd, string Mobile, string Content, string Cell, string SendTime) {
            return base.Channel.BatchSend(CorpID, Pwd, Mobile, Content, Cell, SendTime);
        }
        
        public System.Threading.Tasks.Task<int> BatchSendAsync(string CorpID, string Pwd, string Mobile, string Content, string Cell, string SendTime) {
            return base.Channel.BatchSendAsync(CorpID, Pwd, Mobile, Content, Cell, SendTime);
        }
        
        public string GetReportFail(string CorpID, string Pwd, string cell) {
            return base.Channel.GetReportFail(CorpID, Pwd, cell);
        }
        
        public System.Threading.Tasks.Task<string> GetReportFailAsync(string CorpID, string Pwd, string cell) {
            return base.Channel.GetReportFailAsync(CorpID, Pwd, cell);
        }
        
        public int Reg(string CorpID, string Pwd, string CorpName, string LinkMan, string Tel, string Mobile, string Email, string Memo) {
            return base.Channel.Reg(CorpID, Pwd, CorpName, LinkMan, Tel, Mobile, Email, Memo);
        }
        
        public System.Threading.Tasks.Task<int> RegAsync(string CorpID, string Pwd, string CorpName, string LinkMan, string Tel, string Mobile, string Email, string Memo) {
            return base.Channel.RegAsync(CorpID, Pwd, CorpName, LinkMan, Tel, Mobile, Email, Memo);
        }
        
        public int UpdPwd(string CorpID, string Pwd, string NewPwd) {
            return base.Channel.UpdPwd(CorpID, Pwd, NewPwd);
        }
        
        public System.Threading.Tasks.Task<int> UpdPwdAsync(string CorpID, string Pwd, string NewPwd) {
            return base.Channel.UpdPwdAsync(CorpID, Pwd, NewPwd);
        }
        
        public int UpdReg(string CorpID, string Pwd, string CorpName, string LinkMan, string Tel, string Mobile, string Email, string Memo) {
            return base.Channel.UpdReg(CorpID, Pwd, CorpName, LinkMan, Tel, Mobile, Email, Memo);
        }
        
        public System.Threading.Tasks.Task<int> UpdRegAsync(string CorpID, string Pwd, string CorpName, string LinkMan, string Tel, string Mobile, string Email, string Memo) {
            return base.Channel.UpdRegAsync(CorpID, Pwd, CorpName, LinkMan, Tel, Mobile, Email, Memo);
        }
        
        public int SelSum(string CorpID, string Pwd) {
            return base.Channel.SelSum(CorpID, Pwd);
        }
        
        public System.Threading.Tasks.Task<int> SelSumAsync(string CorpID, string Pwd) {
            return base.Channel.SelSumAsync(CorpID, Pwd);
        }
        
        public int Send(string CorpID, string Pwd, string Mobile, string Content, string Cell, string SendTime) {
            return base.Channel.Send(CorpID, Pwd, Mobile, Content, Cell, SendTime);
        }
        
        public System.Threading.Tasks.Task<int> SendAsync(string CorpID, string Pwd, string Mobile, string Content, string Cell, string SendTime) {
            return base.Channel.SendAsync(CorpID, Pwd, Mobile, Content, Cell, SendTime);
        }
        
        public string Get(string CorpID, string Pwd) {
            return base.Channel.Get(CorpID, Pwd);
        }
        
        public System.Threading.Tasks.Task<string> GetAsync(string CorpID, string Pwd) {
            return base.Channel.GetAsync(CorpID, Pwd);
        }
        
        public int UnReg(string CorpID, string Pwd) {
            return base.Channel.UnReg(CorpID, Pwd);
        }
        
        public System.Threading.Tasks.Task<int> UnRegAsync(string CorpID, string Pwd) {
            return base.Channel.UnRegAsync(CorpID, Pwd);
        }
        
        public int ChargeUp(string CorpID, string Pwd, string CardNo, string CardPwd) {
            return base.Channel.ChargeUp(CorpID, Pwd, CardNo, CardPwd);
        }
        
        public System.Threading.Tasks.Task<int> ChargeUpAsync(string CorpID, string Pwd, string CardNo, string CardPwd) {
            return base.Channel.ChargeUpAsync(CorpID, Pwd, CardNo, CardPwd);
        }
        
        public string AgentChangeAccount(string LoginName, string LoginPwd, string CorpID, int SmsBalance, int MmsBalance) {
            return base.Channel.AgentChangeAccount(LoginName, LoginPwd, CorpID, SmsBalance, MmsBalance);
        }
        
        public System.Threading.Tasks.Task<string> AgentChangeAccountAsync(string LoginName, string LoginPwd, string CorpID, int SmsBalance, int MmsBalance) {
            return base.Channel.AgentChangeAccountAsync(LoginName, LoginPwd, CorpID, SmsBalance, MmsBalance);
        }
        
        public string BalanceMMS(string CorpID, string Pwd) {
            return base.Channel.BalanceMMS(CorpID, Pwd);
        }
        
        public System.Threading.Tasks.Task<string> BalanceMMSAsync(string CorpID, string Pwd) {
            return base.Channel.BalanceMMSAsync(CorpID, Pwd);
        }
        
        public string SendMMS(string CorpID, string Pwd, string Mobile, string Base64Content, string Title, string ExtCode, string SendTime) {
            return base.Channel.SendMMS(CorpID, Pwd, Mobile, Base64Content, Title, ExtCode, SendTime);
        }
        
        public System.Threading.Tasks.Task<string> SendMMSAsync(string CorpID, string Pwd, string Mobile, string Base64Content, string Title, string ExtCode, string SendTime) {
            return base.Channel.SendMMSAsync(CorpID, Pwd, Mobile, Base64Content, Title, ExtCode, SendTime);
        }
        
        public string BatchSendMMS(string CorpID, string Pwd, string Mobiles, string Base64Content, string Title, string ExtCode, string SendTime) {
            return base.Channel.BatchSendMMS(CorpID, Pwd, Mobiles, Base64Content, Title, ExtCode, SendTime);
        }
        
        public System.Threading.Tasks.Task<string> BatchSendMMSAsync(string CorpID, string Pwd, string Mobiles, string Base64Content, string Title, string ExtCode, string SendTime) {
            return base.Channel.BatchSendMMSAsync(CorpID, Pwd, Mobiles, Base64Content, Title, ExtCode, SendTime);
        }
        
        public string GetReportFailMMS(string CorpID, string Pwd, string cell) {
            return base.Channel.GetReportFailMMS(CorpID, Pwd, cell);
        }
        
        public System.Threading.Tasks.Task<string> GetReportFailMMSAsync(string CorpID, string Pwd, string cell) {
            return base.Channel.GetReportFailMMSAsync(CorpID, Pwd, cell);
        }
        
        public string GetMMS(string CorpID, string Pwd) {
            return base.Channel.GetMMS(CorpID, Pwd);
        }
        
        public System.Threading.Tasks.Task<string> GetMMSAsync(string CorpID, string Pwd) {
            return base.Channel.GetMMSAsync(CorpID, Pwd);
        }
        
        public string ChargeUpMMS(string CorpID, string Pwd, string CardNo, string CardPwd) {
            return base.Channel.ChargeUpMMS(CorpID, Pwd, CardNo, CardPwd);
        }
        
        public System.Threading.Tasks.Task<string> ChargeUpMMSAsync(string CorpID, string Pwd, string CardNo, string CardPwd) {
            return base.Channel.ChargeUpMMSAsync(CorpID, Pwd, CardNo, CardPwd);
        }
        
        public string AgentMakeAccount(string LoginName, string LoginPwd, string CorpName, string LinkMan, string Tel, string Mobile, string Email, string Memo, string CorpID, string Pass) {
            return base.Channel.AgentMakeAccount(LoginName, LoginPwd, CorpName, LinkMan, Tel, Mobile, Email, Memo, CorpID, Pass);
        }
        
        public System.Threading.Tasks.Task<string> AgentMakeAccountAsync(string LoginName, string LoginPwd, string CorpName, string LinkMan, string Tel, string Mobile, string Email, string Memo, string CorpID, string Pass) {
            return base.Channel.AgentMakeAccountAsync(LoginName, LoginPwd, CorpName, LinkMan, Tel, Mobile, Email, Memo, CorpID, Pass);
        }
        
        public string GetReportSMS(string CorpID, string Pwd) {
            return base.Channel.GetReportSMS(CorpID, Pwd);
        }
        
        public System.Threading.Tasks.Task<string> GetReportSMSAsync(string CorpID, string Pwd) {
            return base.Channel.GetReportSMSAsync(CorpID, Pwd);
        }
        
        public string GetReportMMS(string CorpID, string Pwd) {
            return base.Channel.GetReportMMS(CorpID, Pwd);
        }
        
        public System.Threading.Tasks.Task<string> GetReportMMSAsync(string CorpID, string Pwd) {
            return base.Channel.GetReportMMSAsync(CorpID, Pwd);
        }
        
        public string Send2(string CorpID, string Pwd, string Mobile, string Content, string Cell, string SendTime) {
            return base.Channel.Send2(CorpID, Pwd, Mobile, Content, Cell, SendTime);
        }
        
        public System.Threading.Tasks.Task<string> Send2Async(string CorpID, string Pwd, string Mobile, string Content, string Cell, string SendTime) {
            return base.Channel.Send2Async(CorpID, Pwd, Mobile, Content, Cell, SendTime);
        }
        
        public string SendMMS2(string CorpID, string Pwd, string Mobile, string Base64Content, string Title, string ExtCode, string SendTime) {
            return base.Channel.SendMMS2(CorpID, Pwd, Mobile, Base64Content, Title, ExtCode, SendTime);
        }
        
        public System.Threading.Tasks.Task<string> SendMMS2Async(string CorpID, string Pwd, string Mobile, string Base64Content, string Title, string ExtCode, string SendTime) {
            return base.Channel.SendMMS2Async(CorpID, Pwd, Mobile, Base64Content, Title, ExtCode, SendTime);
        }
        
        public string BatchSend2(string CorpID, string Pwd, string Mobile, string Content, string Cell, string SendTime) {
            return base.Channel.BatchSend2(CorpID, Pwd, Mobile, Content, Cell, SendTime);
        }
        
        public System.Threading.Tasks.Task<string> BatchSend2Async(string CorpID, string Pwd, string Mobile, string Content, string Cell, string SendTime) {
            return base.Channel.BatchSend2Async(CorpID, Pwd, Mobile, Content, Cell, SendTime);
        }
        
        public string BatchSendMMS2(string CorpID, string Pwd, string Mobiles, string Base64Content, string Title, string ExtCode, string SendTime) {
            return base.Channel.BatchSendMMS2(CorpID, Pwd, Mobiles, Base64Content, Title, ExtCode, SendTime);
        }
        
        public System.Threading.Tasks.Task<string> BatchSendMMS2Async(string CorpID, string Pwd, string Mobiles, string Base64Content, string Title, string ExtCode, string SendTime) {
            return base.Channel.BatchSendMMS2Async(CorpID, Pwd, Mobiles, Base64Content, Title, ExtCode, SendTime);
        }
        
        public string VoiceNotify(string CorpID, string Pwd, string Mobile, string verify_code, string vtpl_id, string show_num) {
            return base.Channel.VoiceNotify(CorpID, Pwd, Mobile, verify_code, vtpl_id, show_num);
        }
        
        public System.Threading.Tasks.Task<string> VoiceNotifyAsync(string CorpID, string Pwd, string Mobile, string verify_code, string vtpl_id, string show_num) {
            return base.Channel.VoiceNotifyAsync(CorpID, Pwd, Mobile, verify_code, vtpl_id, show_num);
        }
        
        public string NotSend(string CorpID, string Pwd) {
            return base.Channel.NotSend(CorpID, Pwd);
        }
        
        public System.Threading.Tasks.Task<string> NotSendAsync(string CorpID, string Pwd) {
            return base.Channel.NotSendAsync(CorpID, Pwd);
        }
        
        public string BatchContentSms(string CorpID, string Pwd, string JsonString) {
            return base.Channel.BatchContentSms(CorpID, Pwd, JsonString);
        }
        
        public System.Threading.Tasks.Task<string> BatchContentSmsAsync(string CorpID, string Pwd, string JsonString) {
            return base.Channel.BatchContentSmsAsync(CorpID, Pwd, JsonString);
        }
    }
}
